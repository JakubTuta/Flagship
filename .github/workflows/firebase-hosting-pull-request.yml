# This file was auto-generated by the Firebase CLI
# https://github.com/firebase/firebase-tools

name: Deploy to Firebase Hosting on PR
on: pull_request
permissions:
  checks: write
  contents: read
  pull-requests: write
jobs:
  build_and_preview:
    if: ${{ github.event.pull_request.head.repo.full_name == github.repository }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Create environment file
        run: |
          echo "API_KEY=${{ secrets.API_KEY }}" > .env
          echo "AUTH_DOMAIN=${{ secrets.AUTH_DOMAIN }}" >> .env
          echo "PROJECT_ID=${{ secrets.PROJECT_ID }}" >> .env
          echo "STORAGE_BUCKET=${{ secrets.STORAGE_BUCKET }}" >> .env
          echo "MESSAGING_SENDER_ID=${{ secrets.MESSAGING_SENDER_ID }}" >> .env
          echo "APP_ID=${{ secrets.APP_ID }}" >> .env
          echo "MEASUREMENT_ID=${{ secrets.MEASUREMENT_ID }}" >> .env
          echo "TOKEN_GITHUB=${{ secrets.TOKEN_GITHUB }}" >> .env
          echo "GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}" >> .env
          echo "NODE_ENV=production" >> .env

      - name: Install dependencies
        run: |
          bun install --no-cache
          bun pm cache rm

      - name: Build application
        run: |
          export NODE_OPTIONS="--max-old-space-size=4096"
          export NODE_ENV=production
          bun run build
        env:
          NITRO_PRESET: firebase

      - name: Install Firebase CLI
        run: bun add -g firebase-tools

      - name: Deploy preview to Firebase
        run: |
          PREVIEW_URL=$(firebase hosting:channel:deploy pr-${{ github.event.number }} --expires 7d --token ${{ secrets.FIREBASE_TOKEN }} --project flagship-8de31 --json | jq -r '.result.url')
          echo "PREVIEW_URL=$PREVIEW_URL" >> $GITHUB_ENV

      - name: Comment PR with preview URL
        uses: actions/github-script@v7
        with:
          script: |
            const previewUrl = process.env.PREVIEW_URL;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `ðŸš€ **Preview deployment ready!**\n\nâœ… Preview URL: ${previewUrl}\n\n*This preview will expire in 7 days.*`
            });
